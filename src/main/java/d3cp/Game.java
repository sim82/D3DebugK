// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: game.capnp

package d3cp;

public final class Game {
  public static class SerializedActor {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SerializedActor.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final long getId() {
        return _getLongField(0);
      }
      public final void setId(long value) {
        _setLongField(0, value);
      }

      public final boolean hasUrl() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getUrl() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setUrl(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setUrl(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initUrl(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasData() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Data.Builder getData() {
        return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
      }
      public final void setData(org.capnproto.Data.Reader value) {
        _setPointerField(org.capnproto.Data.factory, 1, value);
      }
      public final void setData(byte [] value) {
        _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
      }
      public final org.capnproto.Data.Builder initData(int size) {
        return _initPointerField(org.capnproto.Data.factory, 1, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final long getId() {
        return _getLongField(0);
      }

      public boolean hasUrl() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getUrl() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasData() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Data.Reader getData() {
        return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
      }

    }

  }


  public static class ActorGeneration {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return ActorGeneration.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasActors() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.SerializedActor.Builder> getActors() {
        return _getPointerField(d3cp.Game.SerializedActor.listFactory, 0, null, 0);
      }
      public final void setActors(org.capnproto.StructList.Reader<d3cp.Game.SerializedActor.Reader> value) {
        _setPointerField(d3cp.Game.SerializedActor.listFactory, 0, value);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.SerializedActor.Builder> initActors(int size) {
        return _initPointerField(d3cp.Game.SerializedActor.listFactory, 0, size);
      }
      public final boolean hasWakeupQueue() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.ActorGeneration.WakeupQueueEntry.Builder> getWakeupQueue() {
        return _getPointerField(d3cp.Game.ActorGeneration.WakeupQueueEntry.listFactory, 1, null, 0);
      }
      public final void setWakeupQueue(org.capnproto.StructList.Reader<d3cp.Game.ActorGeneration.WakeupQueueEntry.Reader> value) {
        _setPointerField(d3cp.Game.ActorGeneration.WakeupQueueEntry.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.ActorGeneration.WakeupQueueEntry.Builder> initWakeupQueue(int size) {
        return _initPointerField(d3cp.Game.ActorGeneration.WakeupQueueEntry.listFactory, 1, size);
      }
      public final long getGenCount() {
        return _getLongField(0);
      }
      public final void setGenCount(long value) {
        _setLongField(0, value);
      }

      public final long getMonotonicTime() {
        return _getLongField(1);
      }
      public final void setMonotonicTime(long value) {
        _setLongField(1, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean hasActors() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Reader<d3cp.Game.SerializedActor.Reader> getActors() {
        return _getPointerField(d3cp.Game.SerializedActor.listFactory, 0, null, 0);
      }

      public final boolean hasWakeupQueue() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<d3cp.Game.ActorGeneration.WakeupQueueEntry.Reader> getWakeupQueue() {
        return _getPointerField(d3cp.Game.ActorGeneration.WakeupQueueEntry.listFactory, 1, null, 0);
      }

      public final long getGenCount() {
        return _getLongField(0);
      }

      public final long getMonotonicTime() {
        return _getLongField(1);
      }

    }

    public static class WakeupQueueEntry {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return ActorGeneration.WakeupQueueEntry.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final long getTime() {
          return _getLongField(0);
        }
        public final void setTime(long value) {
          _setLongField(0, value);
        }

        public final long getId() {
          return _getLongField(1);
        }
        public final void setId(long value) {
          _setLongField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final long getTime() {
          return _getLongField(0);
        }

        public final long getId() {
          return _getLongField(1);
        }

      }

    }


  }


  public static class ActorGame {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return ActorGame.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final d3cp.Game.ActorGeneration.Builder getActorGeneration() {
        return _getPointerField(d3cp.Game.ActorGeneration.factory, 0, null, 0);
      }
      public final void setActorGeneration(d3cp.Game.ActorGeneration.Reader value) {
        _setPointerField(d3cp.Game.ActorGeneration.factory,0, value);
      }
      public final d3cp.Game.ActorGeneration.Builder initActorGeneration() {
        return _initPointerField(d3cp.Game.ActorGeneration.factory,0, 0);
      }
      public final boolean hasIdBitmap() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Data.Builder getIdBitmap() {
        return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
      }
      public final void setIdBitmap(org.capnproto.Data.Reader value) {
        _setPointerField(org.capnproto.Data.factory, 1, value);
      }
      public final void setIdBitmap(byte [] value) {
        _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
      }
      public final org.capnproto.Data.Builder initIdBitmap(int size) {
        return _initPointerField(org.capnproto.Data.factory, 1, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasActorGeneration() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.ActorGeneration.Reader getActorGeneration() {
        return _getPointerField(d3cp.Game.ActorGeneration.factory,0,null, 0);
      }

      public boolean hasIdBitmap() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Data.Reader getIdBitmap() {
        return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
      }

    }

  }


  public static class SinglePlayerGame {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SinglePlayerGame.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

  }


  public static class ScriptValue {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return ScriptValue.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.TABLE;
          case 1 : return Which.ARRAY;
          case 2 : return Which.INT_VALUE;
          case 3 : return Which.FLOAT_VALUE;
          case 4 : return Which.BOOL_VALUE;
          case 5 : return Which.STRING_VALUE;
          case 6 : return Which.CLOSURE;
          case 7 : return Which.UNHANDLED;
          case 8 : return Which.INSTANCE;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean isTable() {
        return which() == ScriptValue.Which.TABLE;
      }
      public final boolean hasTable() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.ScriptKeyValue.Builder> getTable() {
        return _getPointerField(d3cp.Game.ScriptKeyValue.listFactory, 0, null, 0);
      }
      public final void setTable(org.capnproto.StructList.Reader<d3cp.Game.ScriptKeyValue.Reader> value) {
        _setShortField(0, (short)ScriptValue.Which.TABLE.ordinal());
        _setPointerField(d3cp.Game.ScriptKeyValue.listFactory, 0, value);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.ScriptKeyValue.Builder> initTable(int size) {
        _setShortField(0, (short)ScriptValue.Which.TABLE.ordinal());
        return _initPointerField(d3cp.Game.ScriptKeyValue.listFactory, 0, size);
      }
      public final boolean isArray() {
        return which() == ScriptValue.Which.ARRAY;
      }
      public final boolean hasArray() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.ScriptValue.Builder> getArray() {
        return _getPointerField(d3cp.Game.ScriptValue.listFactory, 0, null, 0);
      }
      public final void setArray(org.capnproto.StructList.Reader<d3cp.Game.ScriptValue.Reader> value) {
        _setShortField(0, (short)ScriptValue.Which.ARRAY.ordinal());
        _setPointerField(d3cp.Game.ScriptValue.listFactory, 0, value);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.ScriptValue.Builder> initArray(int size) {
        _setShortField(0, (short)ScriptValue.Which.ARRAY.ordinal());
        return _initPointerField(d3cp.Game.ScriptValue.listFactory, 0, size);
      }
      public final boolean isIntValue() {
        return which() == ScriptValue.Which.INT_VALUE;
      }
      public final long getIntValue() {
        assert which() == ScriptValue.Which.INT_VALUE:
                    "Must check which() before get()ing a union member.";
        return _getLongField(1);
      }
      public final void setIntValue(long value) {
        _setShortField(0, (short)ScriptValue.Which.INT_VALUE.ordinal());
        _setLongField(1, value);
      }

      public final boolean isFloatValue() {
        return which() == ScriptValue.Which.FLOAT_VALUE;
      }
      public final double getFloatValue() {
        assert which() == ScriptValue.Which.FLOAT_VALUE:
                    "Must check which() before get()ing a union member.";
        return _getDoubleField(1);
      }
      public final void setFloatValue(double value) {
        _setShortField(0, (short)ScriptValue.Which.FLOAT_VALUE.ordinal());
        _setDoubleField(1, value);
      }

      public final boolean isBoolValue() {
        return which() == ScriptValue.Which.BOOL_VALUE;
      }
      public final boolean getBoolValue() {
        assert which() == ScriptValue.Which.BOOL_VALUE:
                    "Must check which() before get()ing a union member.";
        return _getBooleanField(64);
      }
      public final void setBoolValue(boolean value) {
        _setShortField(0, (short)ScriptValue.Which.BOOL_VALUE.ordinal());
        _setBooleanField(64, value);
      }

      public final boolean isStringValue() {
        return which() == ScriptValue.Which.STRING_VALUE;
      }
      public final boolean hasStringValue() {
        if (which() != ScriptValue.Which.STRING_VALUE) return false;
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getStringValue() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setStringValue(org.capnproto.Text.Reader value) {
        _setShortField(0, (short)ScriptValue.Which.STRING_VALUE.ordinal());
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setStringValue(String value) {
        _setShortField(0, (short)ScriptValue.Which.STRING_VALUE.ordinal());
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initStringValue(int size) {
        _setShortField(0, (short)ScriptValue.Which.STRING_VALUE.ordinal());
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean isClosure() {
        return which() == ScriptValue.Which.CLOSURE;
      }
      public final boolean hasClosure() {
        if (which() != ScriptValue.Which.CLOSURE) return false;
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Data.Builder getClosure() {
        return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
      }
      public final void setClosure(org.capnproto.Data.Reader value) {
        _setShortField(0, (short)ScriptValue.Which.CLOSURE.ordinal());
        _setPointerField(org.capnproto.Data.factory, 0, value);
      }
      public final void setClosure(byte [] value) {
        _setShortField(0, (short)ScriptValue.Which.CLOSURE.ordinal());
        _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
      }
      public final org.capnproto.Data.Builder initClosure(int size) {
        _setShortField(0, (short)ScriptValue.Which.CLOSURE.ordinal());
        return _initPointerField(org.capnproto.Data.factory, 0, size);
      }
      public final boolean isUnhandled() {
        return which() == ScriptValue.Which.UNHANDLED;
      }
      public final int getUnhandled() {
        assert which() == ScriptValue.Which.UNHANDLED:
                    "Must check which() before get()ing a union member.";
        return _getIntField(2);
      }
      public final void setUnhandled(int value) {
        _setShortField(0, (short)ScriptValue.Which.UNHANDLED.ordinal());
        _setIntField(2, value);
      }

      public final boolean isInstance() {
        return which() == ScriptValue.Which.INSTANCE;
      }
      public final boolean hasInstance() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.ScriptKeyValue.Builder> getInstance() {
        return _getPointerField(d3cp.Game.ScriptKeyValue.listFactory, 0, null, 0);
      }
      public final void setInstance(org.capnproto.StructList.Reader<d3cp.Game.ScriptKeyValue.Reader> value) {
        _setShortField(0, (short)ScriptValue.Which.INSTANCE.ordinal());
        _setPointerField(d3cp.Game.ScriptKeyValue.listFactory, 0, value);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.ScriptKeyValue.Builder> initInstance(int size) {
        _setShortField(0, (short)ScriptValue.Which.INSTANCE.ordinal());
        return _initPointerField(d3cp.Game.ScriptKeyValue.listFactory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.TABLE;
          case 1 : return Which.ARRAY;
          case 2 : return Which.INT_VALUE;
          case 3 : return Which.FLOAT_VALUE;
          case 4 : return Which.BOOL_VALUE;
          case 5 : return Which.STRING_VALUE;
          case 6 : return Which.CLOSURE;
          case 7 : return Which.UNHANDLED;
          case 8 : return Which.INSTANCE;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final boolean isTable() {
        return which() == ScriptValue.Which.TABLE;
      }
      public final boolean hasTable() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Reader<d3cp.Game.ScriptKeyValue.Reader> getTable() {
        return _getPointerField(d3cp.Game.ScriptKeyValue.listFactory, 0, null, 0);
      }

      public final boolean isArray() {
        return which() == ScriptValue.Which.ARRAY;
      }
      public final boolean hasArray() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Reader<d3cp.Game.ScriptValue.Reader> getArray() {
        return _getPointerField(d3cp.Game.ScriptValue.listFactory, 0, null, 0);
      }

      public final boolean isIntValue() {
        return which() == ScriptValue.Which.INT_VALUE;
      }
      public final long getIntValue() {
        assert which() == ScriptValue.Which.INT_VALUE:
                    "Must check which() before get()ing a union member.";
        return _getLongField(1);
      }

      public final boolean isFloatValue() {
        return which() == ScriptValue.Which.FLOAT_VALUE;
      }
      public final double getFloatValue() {
        assert which() == ScriptValue.Which.FLOAT_VALUE:
                    "Must check which() before get()ing a union member.";
        return _getDoubleField(1);
      }

      public final boolean isBoolValue() {
        return which() == ScriptValue.Which.BOOL_VALUE;
      }
      public final boolean getBoolValue() {
        assert which() == ScriptValue.Which.BOOL_VALUE:
                    "Must check which() before get()ing a union member.";
        return _getBooleanField(64);
      }

      public final boolean isStringValue() {
        return which() == ScriptValue.Which.STRING_VALUE;
      }
      public boolean hasStringValue() {
        if (which() != ScriptValue.Which.STRING_VALUE) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getStringValue() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final boolean isClosure() {
        return which() == ScriptValue.Which.CLOSURE;
      }
      public boolean hasClosure() {
        if (which() != ScriptValue.Which.CLOSURE) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Data.Reader getClosure() {
        return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
      }

      public final boolean isUnhandled() {
        return which() == ScriptValue.Which.UNHANDLED;
      }
      public final int getUnhandled() {
        assert which() == ScriptValue.Which.UNHANDLED:
                    "Must check which() before get()ing a union member.";
        return _getIntField(2);
      }

      public final boolean isInstance() {
        return which() == ScriptValue.Which.INSTANCE;
      }
      public final boolean hasInstance() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Reader<d3cp.Game.ScriptKeyValue.Reader> getInstance() {
        return _getPointerField(d3cp.Game.ScriptKeyValue.listFactory, 0, null, 0);
      }

    }

    public enum Which {
      TABLE,
      ARRAY,
      INT_VALUE,
      FLOAT_VALUE,
      BOOL_VALUE,
      STRING_VALUE,
      CLOSURE,
      UNHANDLED,
      INSTANCE,
      _NOT_IN_SCHEMA,
    }
  }


  public static class ScriptKeyValue {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return ScriptKeyValue.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasKey() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getKey() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setKey(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setKey(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initKey(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final d3cp.Game.ScriptValue.Builder getValue() {
        return _getPointerField(d3cp.Game.ScriptValue.factory, 1, null, 0);
      }
      public final void setValue(d3cp.Game.ScriptValue.Reader value) {
        _setPointerField(d3cp.Game.ScriptValue.factory,1, value);
      }
      public final d3cp.Game.ScriptValue.Builder initValue() {
        return _initPointerField(d3cp.Game.ScriptValue.factory,1, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasKey() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getKey() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasValue() {
        return !_pointerFieldIsNull(1);
      }
      public d3cp.Game.ScriptValue.Reader getValue() {
        return _getPointerField(d3cp.Game.ScriptValue.factory,1,null, 0);
      }

    }

  }


  public static class DebugRequest {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return DebugRequest.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(4)) {
          case 0 : return Which.SCRIPT_INFO;
          case 1 : return Which.ADD_BREAKPOINT;
          case 2 : return Which.SCRIPT_GET;
          case 3 : return Which.EXECUTE;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final long getToken() {
        return _getLongField(0);
      }
      public final void setToken(long value) {
        _setLongField(0, value);
      }

      public final boolean isScriptInfo() {
        return which() == DebugRequest.Which.SCRIPT_INFO;
      }
      public final d3cp.Game.DebugRequest.ScriptInfo.Builder getScriptInfo() {
        assert which() == DebugRequest.Which.SCRIPT_INFO:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugRequest.ScriptInfo.factory, 0, null, 0);
      }
      public final void setScriptInfo(d3cp.Game.DebugRequest.ScriptInfo.Reader value) {
        _setShortField(4, (short)DebugRequest.Which.SCRIPT_INFO.ordinal());
        _setPointerField(d3cp.Game.DebugRequest.ScriptInfo.factory,0, value);
      }
      public final d3cp.Game.DebugRequest.ScriptInfo.Builder initScriptInfo() {
        _setShortField(4, (short)DebugRequest.Which.SCRIPT_INFO.ordinal());
        return _initPointerField(d3cp.Game.DebugRequest.ScriptInfo.factory,0, 0);
      }
      public final boolean isAddBreakpoint() {
        return which() == DebugRequest.Which.ADD_BREAKPOINT;
      }
      public final d3cp.Game.DebugRequest.AddBreakpoint.Builder getAddBreakpoint() {
        assert which() == DebugRequest.Which.ADD_BREAKPOINT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugRequest.AddBreakpoint.factory, 0, null, 0);
      }
      public final void setAddBreakpoint(d3cp.Game.DebugRequest.AddBreakpoint.Reader value) {
        _setShortField(4, (short)DebugRequest.Which.ADD_BREAKPOINT.ordinal());
        _setPointerField(d3cp.Game.DebugRequest.AddBreakpoint.factory,0, value);
      }
      public final d3cp.Game.DebugRequest.AddBreakpoint.Builder initAddBreakpoint() {
        _setShortField(4, (short)DebugRequest.Which.ADD_BREAKPOINT.ordinal());
        return _initPointerField(d3cp.Game.DebugRequest.AddBreakpoint.factory,0, 0);
      }
      public final boolean isScriptGet() {
        return which() == DebugRequest.Which.SCRIPT_GET;
      }
      public final d3cp.Game.DebugRequest.ScriptGet.Builder getScriptGet() {
        assert which() == DebugRequest.Which.SCRIPT_GET:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugRequest.ScriptGet.factory, 0, null, 0);
      }
      public final void setScriptGet(d3cp.Game.DebugRequest.ScriptGet.Reader value) {
        _setShortField(4, (short)DebugRequest.Which.SCRIPT_GET.ordinal());
        _setPointerField(d3cp.Game.DebugRequest.ScriptGet.factory,0, value);
      }
      public final d3cp.Game.DebugRequest.ScriptGet.Builder initScriptGet() {
        _setShortField(4, (short)DebugRequest.Which.SCRIPT_GET.ordinal());
        return _initPointerField(d3cp.Game.DebugRequest.ScriptGet.factory,0, 0);
      }
      public final boolean isExecute() {
        return which() == DebugRequest.Which.EXECUTE;
      }
      public final d3cp.Game.DebugRequest.Execute.Builder getExecute() {
        assert which() == DebugRequest.Which.EXECUTE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugRequest.Execute.factory, 0, null, 0);
      }
      public final void setExecute(d3cp.Game.DebugRequest.Execute.Reader value) {
        _setShortField(4, (short)DebugRequest.Which.EXECUTE.ordinal());
        _setPointerField(d3cp.Game.DebugRequest.Execute.factory,0, value);
      }
      public final d3cp.Game.DebugRequest.Execute.Builder initExecute() {
        _setShortField(4, (short)DebugRequest.Which.EXECUTE.ordinal());
        return _initPointerField(d3cp.Game.DebugRequest.Execute.factory,0, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(4)) {
          case 0 : return Which.SCRIPT_INFO;
          case 1 : return Which.ADD_BREAKPOINT;
          case 2 : return Which.SCRIPT_GET;
          case 3 : return Which.EXECUTE;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final long getToken() {
        return _getLongField(0);
      }

      public final boolean isScriptInfo() {
        return which() == DebugRequest.Which.SCRIPT_INFO;
      }
      public boolean hasScriptInfo() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.DebugRequest.ScriptInfo.Reader getScriptInfo() {
        assert which() == DebugRequest.Which.SCRIPT_INFO:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugRequest.ScriptInfo.factory,0,null, 0);
      }

      public final boolean isAddBreakpoint() {
        return which() == DebugRequest.Which.ADD_BREAKPOINT;
      }
      public boolean hasAddBreakpoint() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.DebugRequest.AddBreakpoint.Reader getAddBreakpoint() {
        assert which() == DebugRequest.Which.ADD_BREAKPOINT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugRequest.AddBreakpoint.factory,0,null, 0);
      }

      public final boolean isScriptGet() {
        return which() == DebugRequest.Which.SCRIPT_GET;
      }
      public boolean hasScriptGet() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.DebugRequest.ScriptGet.Reader getScriptGet() {
        assert which() == DebugRequest.Which.SCRIPT_GET:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugRequest.ScriptGet.factory,0,null, 0);
      }

      public final boolean isExecute() {
        return which() == DebugRequest.Which.EXECUTE;
      }
      public boolean hasExecute() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.DebugRequest.Execute.Reader getExecute() {
        assert which() == DebugRequest.Which.EXECUTE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugRequest.Execute.factory,0,null, 0);
      }

    }

    public enum Which {
      SCRIPT_INFO,
      ADD_BREAKPOINT,
      SCRIPT_GET,
      EXECUTE,
      _NOT_IN_SCHEMA,
    }
    public static class ScriptInfo {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugRequest.ScriptInfo.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

    }


    public static class AddBreakpoint {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugRequest.AddBreakpoint.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getId() {
          return _getIntField(0);
        }
        public final void setId(int value) {
          _setIntField(0, value);
        }

        public final int getLine() {
          return _getIntField(1);
        }
        public final void setLine(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getId() {
          return _getIntField(0);
        }

        public final int getLine() {
          return _getIntField(1);
        }

      }

    }


    public static class ScriptGet {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugRequest.ScriptGet.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getId() {
          return _getIntField(0);
        }
        public final void setId(int value) {
          _setIntField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getId() {
          return _getIntField(0);
        }

      }

    }


    public static class Execute {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugRequest.Execute.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasScript() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getScript() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setScript(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setScript(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initScript(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final boolean getImmediate() {
          return _getBooleanField(0);
        }
        public final void setImmediate(boolean value) {
          _setBooleanField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasScript() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getScript() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public final boolean getImmediate() {
          return _getBooleanField(0);
        }

      }

    }


  }


  public static class DebugReply {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return DebugReply.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(4)) {
          case 0 : return Which.ERROR;
          case 1 : return Which.SCRIPT_INFO;
          case 2 : return Which.ADD_BREAKPOINT;
          case 3 : return Which.SCRIPT_GET;
          case 4 : return Which.EVENT_STOPPED;
          case 5 : return Which.EVENT_WATCHPOINT;
          case 6 : return Which.EXECUTE;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final long getToken() {
        return _getLongField(0);
      }
      public final void setToken(long value) {
        _setLongField(0, value);
      }

      public final boolean isError() {
        return which() == DebugReply.Which.ERROR;
      }
      public final boolean hasError() {
        if (which() != DebugReply.Which.ERROR) return false;
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getError() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setError(org.capnproto.Text.Reader value) {
        _setShortField(4, (short)DebugReply.Which.ERROR.ordinal());
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setError(String value) {
        _setShortField(4, (short)DebugReply.Which.ERROR.ordinal());
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initError(int size) {
        _setShortField(4, (short)DebugReply.Which.ERROR.ordinal());
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean isScriptInfo() {
        return which() == DebugReply.Which.SCRIPT_INFO;
      }
      public final boolean hasScriptInfo() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.DebugReply.ScriptInfo.Builder> getScriptInfo() {
        return _getPointerField(d3cp.Game.DebugReply.ScriptInfo.listFactory, 0, null, 0);
      }
      public final void setScriptInfo(org.capnproto.StructList.Reader<d3cp.Game.DebugReply.ScriptInfo.Reader> value) {
        _setShortField(4, (short)DebugReply.Which.SCRIPT_INFO.ordinal());
        _setPointerField(d3cp.Game.DebugReply.ScriptInfo.listFactory, 0, value);
      }
      public final org.capnproto.StructList.Builder<d3cp.Game.DebugReply.ScriptInfo.Builder> initScriptInfo(int size) {
        _setShortField(4, (short)DebugReply.Which.SCRIPT_INFO.ordinal());
        return _initPointerField(d3cp.Game.DebugReply.ScriptInfo.listFactory, 0, size);
      }
      public final boolean isAddBreakpoint() {
        return which() == DebugReply.Which.ADD_BREAKPOINT;
      }
      public final d3cp.Game.DebugReply.AddBreakpoint.Builder getAddBreakpoint() {
        assert which() == DebugReply.Which.ADD_BREAKPOINT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.AddBreakpoint.factory, 0, null, 0);
      }
      public final void setAddBreakpoint(d3cp.Game.DebugReply.AddBreakpoint.Reader value) {
        _setShortField(4, (short)DebugReply.Which.ADD_BREAKPOINT.ordinal());
        _setPointerField(d3cp.Game.DebugReply.AddBreakpoint.factory,0, value);
      }
      public final d3cp.Game.DebugReply.AddBreakpoint.Builder initAddBreakpoint() {
        _setShortField(4, (short)DebugReply.Which.ADD_BREAKPOINT.ordinal());
        return _initPointerField(d3cp.Game.DebugReply.AddBreakpoint.factory,0, 0);
      }
      public final boolean isScriptGet() {
        return which() == DebugReply.Which.SCRIPT_GET;
      }
      public final d3cp.Game.DebugReply.ScriptGet.Builder getScriptGet() {
        assert which() == DebugReply.Which.SCRIPT_GET:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.ScriptGet.factory, 0, null, 0);
      }
      public final void setScriptGet(d3cp.Game.DebugReply.ScriptGet.Reader value) {
        _setShortField(4, (short)DebugReply.Which.SCRIPT_GET.ordinal());
        _setPointerField(d3cp.Game.DebugReply.ScriptGet.factory,0, value);
      }
      public final d3cp.Game.DebugReply.ScriptGet.Builder initScriptGet() {
        _setShortField(4, (short)DebugReply.Which.SCRIPT_GET.ordinal());
        return _initPointerField(d3cp.Game.DebugReply.ScriptGet.factory,0, 0);
      }
      public final boolean isEventStopped() {
        return which() == DebugReply.Which.EVENT_STOPPED;
      }
      public final d3cp.Game.DebugReply.EventStopped.Builder getEventStopped() {
        assert which() == DebugReply.Which.EVENT_STOPPED:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.EventStopped.factory, 0, null, 0);
      }
      public final void setEventStopped(d3cp.Game.DebugReply.EventStopped.Reader value) {
        _setShortField(4, (short)DebugReply.Which.EVENT_STOPPED.ordinal());
        _setPointerField(d3cp.Game.DebugReply.EventStopped.factory,0, value);
      }
      public final d3cp.Game.DebugReply.EventStopped.Builder initEventStopped() {
        _setShortField(4, (short)DebugReply.Which.EVENT_STOPPED.ordinal());
        return _initPointerField(d3cp.Game.DebugReply.EventStopped.factory,0, 0);
      }
      public final boolean isEventWatchpoint() {
        return which() == DebugReply.Which.EVENT_WATCHPOINT;
      }
      public final d3cp.Game.DebugReply.EventWatchpoint.Builder getEventWatchpoint() {
        assert which() == DebugReply.Which.EVENT_WATCHPOINT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.EventWatchpoint.factory, 0, null, 0);
      }
      public final void setEventWatchpoint(d3cp.Game.DebugReply.EventWatchpoint.Reader value) {
        _setShortField(4, (short)DebugReply.Which.EVENT_WATCHPOINT.ordinal());
        _setPointerField(d3cp.Game.DebugReply.EventWatchpoint.factory,0, value);
      }
      public final d3cp.Game.DebugReply.EventWatchpoint.Builder initEventWatchpoint() {
        _setShortField(4, (short)DebugReply.Which.EVENT_WATCHPOINT.ordinal());
        return _initPointerField(d3cp.Game.DebugReply.EventWatchpoint.factory,0, 0);
      }
      public final boolean isExecute() {
        return which() == DebugReply.Which.EXECUTE;
      }
      public final d3cp.Game.DebugReply.Execute.Builder getExecute() {
        assert which() == DebugReply.Which.EXECUTE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.Execute.factory, 0, null, 0);
      }
      public final void setExecute(d3cp.Game.DebugReply.Execute.Reader value) {
        _setShortField(4, (short)DebugReply.Which.EXECUTE.ordinal());
        _setPointerField(d3cp.Game.DebugReply.Execute.factory,0, value);
      }
      public final d3cp.Game.DebugReply.Execute.Builder initExecute() {
        _setShortField(4, (short)DebugReply.Which.EXECUTE.ordinal());
        return _initPointerField(d3cp.Game.DebugReply.Execute.factory,0, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(4)) {
          case 0 : return Which.ERROR;
          case 1 : return Which.SCRIPT_INFO;
          case 2 : return Which.ADD_BREAKPOINT;
          case 3 : return Which.SCRIPT_GET;
          case 4 : return Which.EVENT_STOPPED;
          case 5 : return Which.EVENT_WATCHPOINT;
          case 6 : return Which.EXECUTE;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final long getToken() {
        return _getLongField(0);
      }

      public final boolean isError() {
        return which() == DebugReply.Which.ERROR;
      }
      public boolean hasError() {
        if (which() != DebugReply.Which.ERROR) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getError() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final boolean isScriptInfo() {
        return which() == DebugReply.Which.SCRIPT_INFO;
      }
      public final boolean hasScriptInfo() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Reader<d3cp.Game.DebugReply.ScriptInfo.Reader> getScriptInfo() {
        return _getPointerField(d3cp.Game.DebugReply.ScriptInfo.listFactory, 0, null, 0);
      }

      public final boolean isAddBreakpoint() {
        return which() == DebugReply.Which.ADD_BREAKPOINT;
      }
      public boolean hasAddBreakpoint() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.DebugReply.AddBreakpoint.Reader getAddBreakpoint() {
        assert which() == DebugReply.Which.ADD_BREAKPOINT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.AddBreakpoint.factory,0,null, 0);
      }

      public final boolean isScriptGet() {
        return which() == DebugReply.Which.SCRIPT_GET;
      }
      public boolean hasScriptGet() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.DebugReply.ScriptGet.Reader getScriptGet() {
        assert which() == DebugReply.Which.SCRIPT_GET:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.ScriptGet.factory,0,null, 0);
      }

      public final boolean isEventStopped() {
        return which() == DebugReply.Which.EVENT_STOPPED;
      }
      public boolean hasEventStopped() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.DebugReply.EventStopped.Reader getEventStopped() {
        assert which() == DebugReply.Which.EVENT_STOPPED:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.EventStopped.factory,0,null, 0);
      }

      public final boolean isEventWatchpoint() {
        return which() == DebugReply.Which.EVENT_WATCHPOINT;
      }
      public boolean hasEventWatchpoint() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.DebugReply.EventWatchpoint.Reader getEventWatchpoint() {
        assert which() == DebugReply.Which.EVENT_WATCHPOINT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.EventWatchpoint.factory,0,null, 0);
      }

      public final boolean isExecute() {
        return which() == DebugReply.Which.EXECUTE;
      }
      public boolean hasExecute() {
        return !_pointerFieldIsNull(0);
      }
      public d3cp.Game.DebugReply.Execute.Reader getExecute() {
        assert which() == DebugReply.Which.EXECUTE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(d3cp.Game.DebugReply.Execute.factory,0,null, 0);
      }

    }

    public enum Which {
      ERROR,
      SCRIPT_INFO,
      ADD_BREAKPOINT,
      SCRIPT_GET,
      EVENT_STOPPED,
      EVENT_WATCHPOINT,
      EXECUTE,
      _NOT_IN_SCHEMA,
    }
    public static class ScriptInfo {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugReply.ScriptInfo.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getId() {
          return _getIntField(0);
        }
        public final void setId(int value) {
          _setIntField(0, value);
        }

        public final boolean hasSourceName() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getSourceName() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setSourceName(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setSourceName(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initSourceName(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getId() {
          return _getIntField(0);
        }

        public boolean hasSourceName() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getSourceName() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

      }

    }


    public static class AddBreakpoint {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugReply.AddBreakpoint.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getBreakpointId() {
          return _getIntField(0);
        }
        public final void setBreakpointId(int value) {
          _setIntField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getBreakpointId() {
          return _getIntField(0);
        }

      }

    }


    public static class ScriptGet {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugReply.ScriptGet.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasSourceLines() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.TextList.Builder getSourceLines() {
          return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
        }
        public final void setSourceLines(org.capnproto.TextList.Reader value) {
          _setPointerField(org.capnproto.TextList.factory, 0, value);
        }
        public final org.capnproto.TextList.Builder initSourceLines(int size) {
          return _initPointerField(org.capnproto.TextList.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasSourceLines() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.TextList.Reader getSourceLines() {
          return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
        }

      }

    }


    public static class EventStopped {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugReply.EventStopped.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(2)) {
            case 0 : return Which.BREAKPOINT_ID;
            case 1 : return Which.SIGNAL;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isBreakpointId() {
          return which() == DebugReply.EventStopped.Which.BREAKPOINT_ID;
        }
        public final int getBreakpointId() {
          assert which() == DebugReply.EventStopped.Which.BREAKPOINT_ID:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }
        public final void setBreakpointId(int value) {
          _setShortField(2, (short)DebugReply.EventStopped.Which.BREAKPOINT_ID.ordinal());
          _setIntField(0, value);
        }

        public final boolean isSignal() {
          return which() == DebugReply.EventStopped.Which.SIGNAL;
        }
        public final int getSignal() {
          assert which() == DebugReply.EventStopped.Which.SIGNAL:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }
        public final void setSignal(int value) {
          _setShortField(2, (short)DebugReply.EventStopped.Which.SIGNAL.ordinal());
          _setIntField(0, value);
        }

        public final int getScriptId() {
          return _getIntField(2);
        }
        public final void setScriptId(int value) {
          _setIntField(2, value);
        }

        public final int getLine() {
          return _getIntField(3);
        }
        public final void setLine(int value) {
          _setIntField(3, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(2)) {
            case 0 : return Which.BREAKPOINT_ID;
            case 1 : return Which.SIGNAL;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isBreakpointId() {
          return which() == DebugReply.EventStopped.Which.BREAKPOINT_ID;
        }
        public final int getBreakpointId() {
          assert which() == DebugReply.EventStopped.Which.BREAKPOINT_ID:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }

        public final boolean isSignal() {
          return which() == DebugReply.EventStopped.Which.SIGNAL;
        }
        public final int getSignal() {
          assert which() == DebugReply.EventStopped.Which.SIGNAL:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }

        public final int getScriptId() {
          return _getIntField(2);
        }

        public final int getLine() {
          return _getIntField(3);
        }

      }

      public enum Which {
        BREAKPOINT_ID,
        SIGNAL,
        _NOT_IN_SCHEMA,
      }
    }


    public static class EventWatchpoint {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugReply.EventWatchpoint.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getWatchpointId() {
          return _getIntField(0);
        }
        public final void setWatchpointId(int value) {
          _setIntField(0, value);
        }

        public final int getScriptId() {
          return _getIntField(1);
        }
        public final void setScriptId(int value) {
          _setIntField(1, value);
        }

        public final int getLine() {
          return _getIntField(2);
        }
        public final void setLine(int value) {
          _setIntField(2, value);
        }

        public final boolean hasLocalNames() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.TextList.Builder getLocalNames() {
          return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
        }
        public final void setLocalNames(org.capnproto.TextList.Reader value) {
          _setPointerField(org.capnproto.TextList.factory, 0, value);
        }
        public final org.capnproto.TextList.Builder initLocalNames(int size) {
          return _initPointerField(org.capnproto.TextList.factory, 0, size);
        }
        public final boolean hasLocalValues() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<d3cp.Game.ScriptValue.Builder> getLocalValues() {
          return _getPointerField(d3cp.Game.ScriptValue.listFactory, 1, null, 0);
        }
        public final void setLocalValues(org.capnproto.StructList.Reader<d3cp.Game.ScriptValue.Reader> value) {
          _setPointerField(d3cp.Game.ScriptValue.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<d3cp.Game.ScriptValue.Builder> initLocalValues(int size) {
          return _initPointerField(d3cp.Game.ScriptValue.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getWatchpointId() {
          return _getIntField(0);
        }

        public final int getScriptId() {
          return _getIntField(1);
        }

        public final int getLine() {
          return _getIntField(2);
        }

        public final boolean hasLocalNames() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.TextList.Reader getLocalNames() {
          return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
        }

        public final boolean hasLocalValues() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<d3cp.Game.ScriptValue.Reader> getLocalValues() {
          return _getPointerField(d3cp.Game.ScriptValue.listFactory, 1, null, 0);
        }

      }

    }


    public static class Execute {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DebugReply.Execute.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasConsoleOutput() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getConsoleOutput() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setConsoleOutput(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setConsoleOutput(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initConsoleOutput(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final boolean getError() {
          return _getBooleanField(0);
        }
        public final void setError(boolean value) {
          _setBooleanField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasConsoleOutput() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getConsoleOutput() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public final boolean getError() {
          return _getBooleanField(0);
        }

      }

    }


  }


  public static class DebugEvent {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return DebugEvent.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

  }



public static final class Schemas {
public static final org.capnproto.SegmentReader b_fa709b01781b09f3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f3\u0009\u001b\u0078\u0001\u009b\u0070\u00fa" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00c7\u0072\u00dd\n\u0002\u0001\u00e6\u00ac" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0053\u0065\u0072\u0069\u0061" +
   "\u006c\u0069\u007a\u0065\u0064\u0041\u0063\u0074" +
   "\u006f\u0072\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0072\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0061\u0074\u0061\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a8e8cba1fb4773ed =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ed\u0073\u0047\u00fb\u00a1\u00cb\u00e8\u00a8" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00c7\u0072\u00dd\n\u0002\u0001\u00e6\u00ac" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0041\u0063\u0074\u006f\u0072" +
   "\u0047\u0065\u006e\u0065\u0072\u0061\u0074\u0069" +
   "\u006f\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00f1\u00ca\u0018\u0025\u00f1\u0000\u002e\u0092" +
   "\u0001\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u0057\u0061\u006b\u0065\u0075\u0070\u0051\u0075" +
   "\u0065\u0075\u0065\u0045\u006e\u0074\u0072\u0079" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0098\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0095\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0094\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u0063\u0074\u006f\u0072\u0073\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f3\u0009\u001b\u0078\u0001\u009b\u0070\u00fa" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0061\u006b\u0065\u0075\u0070\u0051\u0075" +
   "\u0065\u0075\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u00ca\u0018\u0025\u00f1\u0000\u002e\u0092" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0065\u006e\u0043\u006f\u0075\u006e\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u006f\u006e\u006f\u0074\u006f\u006e\u0069" +
   "\u0063\u0054\u0069\u006d\u0065\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_922e00f12518caf1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f1\u00ca\u0018\u0025\u00f1\u0000\u002e\u0092" +
   "\u001b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00ed\u0073\u0047\u00fb\u00a1\u00cb\u00e8\u00a8" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0062\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0041\u0063\u0074\u006f\u0072" +
   "\u0047\u0065\u006e\u0065\u0072\u0061\u0074\u0069" +
   "\u006f\u006e\u002e\u0057\u0061\u006b\u0065\u0075" +
   "\u0070\u0051\u0075\u0065\u0075\u0065\u0045\u006e" +
   "\u0074\u0072\u0079\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0069\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9471de242e35d076 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0076\u00d0\u0035\u002e\u0024\u00de\u0071\u0094" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00c7\u0072\u00dd\n\u0002\u0001\u00e6\u00ac" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0041\u0063\u0074\u006f\u0072" +
   "\u0047\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u0063\u0074\u006f\u0072\u0047\u0065\u006e" +
   "\u0065\u0072\u0061\u0074\u0069\u006f\u006e\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ed\u0073\u0047\u00fb\u00a1\u00cb\u00e8\u00a8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0064\u0042\u0069\u0074\u006d\u0061\u0070" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9eac19dbe2514b45 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0045\u004b\u0051\u00e2\u00db\u0019\u00ac\u009e" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00c7\u0072\u00dd\n\u0002\u0001\u00e6\u00ac" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0053\u0069\u006e\u0067\u006c" +
   "\u0065\u0050\u006c\u0061\u0079\u0065\u0072\u0047" +
   "\u0061\u006d\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_878a3f17fda5d9d7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d7\u00d9\u00a5\u00fd\u0017\u003f\u008a\u0087" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00c7\u0072\u00dd\n\u0002\u0001\u00e6\u00ac" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0009\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u00ff\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0053\u0063\u0072\u0069\u0070" +
   "\u0074\u0056\u0061\u006c\u0075\u0065\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ed\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0004\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0014\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0020\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fc\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0028\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fb\u00ff\u0040\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fa\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u00f9\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u00f8\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u00f7\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u00e8\u00af\u00c3\u001e\u00e6\u0015\u00ca" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0072\u0072\u0061\u0079\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d7\u00d9\u00a5\u00fd\u0017\u003f\u008a\u0087" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0056\u0061\u006c\u0075\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006c\u006f\u0061\u0074\u0056\u0061\u006c" +
   "\u0075\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u006f\u006f\u006c\u0056\u0061\u006c\u0075" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u0069\u006e\u0067\u0056\u0061" +
   "\u006c\u0075\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006c\u006f\u0073\u0075\u0072\u0065\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0073\u0074\u0061\u006e\u0063\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u00e8\u00af\u00c3\u001e\u00e6\u0015\u00ca" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ca15e61ec3afe812 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0012\u00e8\u00af\u00c3\u001e\u00e6\u0015\u00ca" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00c7\u0072\u00dd\n\u0002\u0001\u00e6\u00ac" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0053\u0063\u0072\u0069\u0070" +
   "\u0074\u004b\u0065\u0079\u0056\u0061\u006c\u0075" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006b\u0065\u0079\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0061\u006c\u0075\u0065\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d7\u00d9\u00a5\u00fd\u0017\u003f\u008a\u0087" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_faabf822874594ff =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ff\u0094\u0045\u0087\"\u00f8\u00ab\u00fa" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00c7\u0072\u00dd\n\u0002\u0001\u00e6\u00ac" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0004\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0047\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0071\u0075\u0065\u0073\u0074\u0000" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u004d\u00af\u004c\u00c9\u0019\u00d1\u0095\u00ed" +
   "\u0019\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0088\u0040\u0050\u004e\u0061\u0072\u00ae\u00e9" +
   "\u0019\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\"\u0023\u009c\u004b\u0072\u00a5\u0071\u00ad" +
   "\u0019\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u006c\u0081\u007e\u00be\u00aa\u00de\u00e4\u00ff" +
   "\u0019\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0053\u0063\u0072\u0069\u0070\u0074\u0049\u006e" +
   "\u0066\u006f\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0064\u0064\u0042\u0072\u0065\u0061\u006b" +
   "\u0070\u006f\u0069\u006e\u0074\u0000\u0000\u0000" +
   "\u0053\u0063\u0072\u0069\u0070\u0074\u0047\u0065" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0078\u0065\u0063\u0075\u0074\u0065\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0081\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0089\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u009c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0094\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u006f\u006b\u0065\u006e\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0072\u0069\u0070\u0074\u0049\u006e" +
   "\u0066\u006f\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u00af\u004c\u00c9\u0019\u00d1\u0095\u00ed" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0064\u0064\u0042\u0072\u0065\u0061\u006b" +
   "\u0070\u006f\u0069\u006e\u0074\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0040\u0050\u004e\u0061\u0072\u00ae\u00e9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0072\u0069\u0070\u0074\u0047\u0065" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\"\u0023\u009c\u004b\u0072\u00a5\u0071\u00ad" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0078\u0065\u0063\u0075\u0074\u0065\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0081\u007e\u00be\u00aa\u00de\u00e4\u00ff" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ed95d119c94caf4d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u004d\u00af\u004c\u00c9\u0019\u00d1\u0095\u00ed" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00ff\u0094\u0045\u0087\"\u00f8\u00ab\u00fa" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0071\u0075\u0065\u0073\u0074\u002e" +
   "\u0053\u0063\u0072\u0069\u0070\u0074\u0049\u006e" +
   "\u0066\u006f\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_e9ae72614e504088 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0088\u0040\u0050\u004e\u0061\u0072\u00ae\u00e9" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00ff\u0094\u0045\u0087\"\u00f8\u00ab\u00fa" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0071\u0075\u0065\u0073\u0074\u002e" +
   "\u0041\u0064\u0064\u0042\u0072\u0065\u0061\u006b" +
   "\u0070\u006f\u0069\u006e\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0069\u006e\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ad71a5724b9c2322 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\"\u0023\u009c\u004b\u0072\u00a5\u0071\u00ad" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00ff\u0094\u0045\u0087\"\u00f8\u00ab\u00fa" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0071\u0075\u0065\u0073\u0074\u002e" +
   "\u0053\u0063\u0072\u0069\u0070\u0074\u0047\u0065" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ffe4deaabe7e816c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006c\u0081\u007e\u00be\u00aa\u00de\u00e4\u00ff" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00ff\u0094\u0045\u0087\"\u00f8\u00ab\u00fa" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0071\u0075\u0065\u0073\u0074\u002e" +
   "\u0045\u0078\u0065\u0063\u0075\u0074\u0065\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0063\u0072\u0069\u0070\u0074\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006d\u006d\u0065\u0064\u0069\u0061\u0074" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cbb9123a59b54670 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0070\u0046\u00b5\u0059\u003a\u0012\u00b9\u00cb" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00c7\u0072\u00dd\n\u0002\u0001\u00e6\u00ac" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0007\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0067\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u00c7\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0070\u006c\u0079\u0000\u0000\u0000" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00d7\u007d\u004f\u0039\u00dc\u004c\u000b\u00ed" +
   "\u0029\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0037\u0052\u00a5\u00b2\u0002\u0064\u0070\u00ef" +
   "\u0029\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0078\u008c\u0089\u00cd\u00b2\u00e6\u0090\u00db" +
   "\u0029\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u00a7\u0038\u00ad\u0019\u00f2\u008c\u009d\u00ac" +
   "\u0029\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u00b8\u0098\u0070\u0024\u00c7\u008e\u0070\u00a9" +
   "\u0029\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0084\u00e8\u0001\u0007\u006f\u00f8\u0046\u00c7" +
   "\u0029\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0053\u0063\u0072\u0069\u0070\u0074\u0049\u006e" +
   "\u0066\u006f\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0064\u0064\u0042\u0072\u0065\u0061\u006b" +
   "\u0070\u006f\u0069\u006e\u0074\u0000\u0000\u0000" +
   "\u0053\u0063\u0072\u0069\u0070\u0074\u0047\u0065" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0076\u0065\u006e\u0074\u0053\u0074\u006f" +
   "\u0070\u0070\u0065\u0064\u0000\u0000\u0000\u0000" +
   "\u0045\u0076\u0065\u006e\u0074\u0057\u0061\u0074" +
   "\u0063\u0068\u0070\u006f\u0069\u006e\u0074\u0000" +
   "\u0045\u0078\u0065\u0063\u0075\u0074\u0065\u0000" +
   "\u0020\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d5\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00fc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0004\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fb\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u00fa\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0001\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u00f9\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u006f\u006b\u0065\u006e\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0072\u0072\u006f\u0072\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0072\u0069\u0070\u0074\u0049\u006e" +
   "\u0066\u006f\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d7\u007d\u004f\u0039\u00dc\u004c\u000b\u00ed" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0064\u0064\u0042\u0072\u0065\u0061\u006b" +
   "\u0070\u006f\u0069\u006e\u0074\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0037\u0052\u00a5\u00b2\u0002\u0064\u0070\u00ef" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0072\u0069\u0070\u0074\u0047\u0065" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u008c\u0089\u00cd\u00b2\u00e6\u0090\u00db" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0076\u0065\u006e\u0074\u0053\u0074\u006f" +
   "\u0070\u0070\u0065\u0064\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a7\u0038\u00ad\u0019\u00f2\u008c\u009d\u00ac" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0076\u0065\u006e\u0074\u0057\u0061\u0074" +
   "\u0063\u0068\u0070\u006f\u0069\u006e\u0074\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0098\u0070\u0024\u00c7\u008e\u0070\u00a9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0078\u0065\u0063\u0075\u0074\u0065\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0084\u00e8\u0001\u0007\u006f\u00f8\u0046\u00c7" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ed0b4cdc394f7dd7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d7\u007d\u004f\u0039\u00dc\u004c\u000b\u00ed" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0070\u0046\u00b5\u0059\u003a\u0012\u00b9\u00cb" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0070\u006c\u0079\u002e\u0053\u0063" +
   "\u0072\u0069\u0070\u0074\u0049\u006e\u0066\u006f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u004e\u0061" +
   "\u006d\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ef706402b2a55237 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0037\u0052\u00a5\u00b2\u0002\u0064\u0070\u00ef" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0070\u0046\u00b5\u0059\u003a\u0012\u00b9\u00cb" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0070\u006c\u0079\u002e\u0041\u0064" +
   "\u0064\u0042\u0072\u0065\u0061\u006b\u0070\u006f" +
   "\u0069\u006e\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0062\u0072\u0065\u0061\u006b\u0070\u006f\u0069" +
   "\u006e\u0074\u0049\u0064\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_db90e6b2cd898c78 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0078\u008c\u0089\u00cd\u00b2\u00e6\u0090\u00db" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0070\u0046\u00b5\u0059\u003a\u0012\u00b9\u00cb" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0070\u006c\u0079\u002e\u0053\u0063" +
   "\u0072\u0069\u0070\u0074\u0047\u0065\u0074\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0028\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u004c\u0069" +
   "\u006e\u0065\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ac9d8cf219ad38a7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a7\u0038\u00ad\u0019\u00f2\u008c\u009d\u00ac" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0070\u0046\u00b5\u0059\u003a\u0012\u00b9\u00cb" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0070\u006c\u0079\u002e\u0045\u0076" +
   "\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0070" +
   "\u0065\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0070\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0062\u0072\u0065\u0061\u006b\u0070\u006f\u0069" +
   "\u006e\u0074\u0049\u0064\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0067\u006e\u0061\u006c\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0072\u0069\u0070\u0074\u0049\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0069\u006e\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a9708ec7247098b8 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b8\u0098\u0070\u0024\u00c7\u008e\u0070\u00a9" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0070\u0046\u00b5\u0059\u003a\u0012\u00b9\u00cb" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0070\u006c\u0079\u002e\u0045\u0076" +
   "\u0065\u006e\u0074\u0057\u0061\u0074\u0063\u0068" +
   "\u0070\u006f\u0069\u006e\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0077\u0061\u0074\u0063\u0068\u0070\u006f\u0069" +
   "\u006e\u0074\u0049\u0064\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0072\u0069\u0070\u0074\u0049\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0069\u006e\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u006f\u0063\u0061\u006c\u004e\u0061\u006d" +
   "\u0065\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u006f\u0063\u0061\u006c\u0056\u0061\u006c" +
   "\u0075\u0065\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d7\u00d9\u00a5\u00fd\u0017\u003f\u008a\u0087" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c746f86f0701e884 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0084\u00e8\u0001\u0007\u006f\u00f8\u0046\u00c7" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0070\u0046\u00b5\u0059\u003a\u0012\u00b9\u00cb" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0052\u0065\u0070\u006c\u0079\u002e\u0045\u0078" +
   "\u0065\u0063\u0075\u0074\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u006f\u006e\u0073\u006f\u006c\u0065\u004f" +
   "\u0075\u0074\u0070\u0075\u0074\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0072\u0072\u006f\u0072\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8336785753b7e47e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u007e\u00e4\u00b7\u0053\u0057\u0078\u0036\u0083" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00c7\u0072\u00dd\n\u0002\u0001\u00e6\u00ac" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u006d\u0065\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0044\u0065\u0062\u0075\u0067" +
   "\u0045\u0076\u0065\u006e\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
}
}

